drop table NODE;
drop table RIDE;
drop table RIDE_PATH;
drop table PATH_MAPPING;


CREATE TABLE NODE(
NODE_ID DOUBLE  NOT NULL,
LONGITUDE DOUBLE NOT NULL,
LATITUDE DOUBLE NOT NULL,
PRIMARY KEY (NODE_ID));

CREATE TABLE RIDE(
PATH_ID INT,
DEPT_LAT DOUBLE NOT NULL,
DEPT_LON DOUBLE NOT NULL,
DEST_LAT DOUBLE NOT NULL,
DEST_LON DOUBLE NOT NULL,
DISTANCE DOUBLE NOT NULL,
DURATION DOUBLE NOT NULL,
AVAILABLE_SEATS INT,
MAX_DETOUR DOUBLE,
DEPT_TIME TIMESTAMP DEFAULT '2002-10-20 12:00',
DEPT_TIME_MARGIN INT );

CREATE TABLE RIDE_PATH(
PATH_ID INT,
LONGITUDE DOUBLE NOT NULL,
LATITUDE DOUBLE NOT NULL,
NODE_ORDER INT NOT NULL);


CREATE TABLE PATH_MAPPING(
NODE_ID DOUBLE NOT NULL,
PATH_ID INT NOT NULL,
PRIMARY KEY (NODE_ID,PATH_ID));


DELIMITER $$
DROP FUNCTION IF EXISTS `get_distance_in_meter_between_geo_locations` $$
CREATE FUNCTION get_distance_in_meter_between_geo_locations(geo1_latitude decimal(10,6), geo1_longitude decimal(10,6), geo2_latitude decimal(10,6), geo2_longitude decimal(10,6)) 
returns decimal(10,3) DETERMINISTIC
BEGIN
  return 1609.34*((ACOS(SIN(geo1_latitude * PI() / 180) * SIN(geo2_latitude * PI() / 180) + COS(geo1_latitude * PI() / 180) * COS(geo2_latitude * PI() / 180) * COS((geo1_longitude - geo2_longitude) * PI() / 180)) * 180 / PI()) * 60 * 1.1515);
END $$
DELIMITER ;

ALTER TABLE NODE ADD INDEX SPPED1 (LONGITUDE,LATITUDE)
ALTER TABLE RIDE_PATH ADD INDEX SPEED2 (LONGITUDE,LATITUDE)